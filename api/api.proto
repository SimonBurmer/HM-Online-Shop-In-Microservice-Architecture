syntax = "proto3";
package api;
option go_package = ".;api";

service Greeter {
  rpc SayHello(HelloRequest) returns (HelloReply) {}
}

message HelloRequest {
  string name = 1;
}

message HelloReply {
  string message = 1;
}


//////////////////////
//// Customer Service 
//////////////////////
service Customer {
  rpc NewCustomer(NewCustomerRequest) returns (CustomerReply) {}
  rpc GetCustomer(GetCustomerRequest) returns (CustomerReply) {}
}

message NewCustomerRequest {
  string name = 1;
  string address = 2;
}

message GetCustomerRequest {
  uint32 id = 1;
}

message CustomerReply {
  uint32 id = 1;
  string name = 2;
  string address = 3;
}

// message CustomerNotFound { uint32 id = 1; }????



//////////////////////
//// Payment Service 
//////////////////////
service Payment {
  rpc NewPayment(NewPaymentRequest) returns (PaymentReply) {}
  rpc GetPayment(GetPaymentRequest) returns (PaymentReply) {}
  rpc DeletePayment(DeletePaymentRequest) returns (PaymentReply) {}

  rpc PayPayment(PayPaymentRequest) returns (PaymentReply) {}
}

message NewPaymentRequest{
  uint32  orderId = 1;
  float  value = 2;
}

message GetPaymentRequest{
  uint32  id = 1;
}

message DeletePaymentRequest{
  uint32  id = 1;
}

message PayPaymentRequest{
  uint32  id = 1;
  float  value = 2;
}

message PaymentReply{
  uint32          id = 1;
  uint32          orderId = 2;
  float           value = 3;
}





//// Order Service //////


///////////////////////
//// Stock Service 
///////////////////////

service Stock {
  rpc AddStock(NewStock) returns (GetReply) {}
  rpc GetArticle(TakeArticle) returns (GetReply) {}
  rpc GetStock(ArticleID) returns (GetStockReply) {}
}
// asdfsaasdfasd

message NewStock {
  int32 id = 1;
  int32 amount = 2;
}

message GetReply {
  int32 amount = 1;
}

message TakeArticle {
  int32 id = 1;
  int32 amount = 2;
}

message ArticleID {
  int32 id = 1;
}

message GetStockReply {
  bool answer = 1;
}


///////////////////////
//// Supplier Service
///////////////////////

// work in progress
service Supplier {
  rpc DeliveredArticle(NewArticles) returns (GetSupplierReply) {}
}

message NewArticles {
  uint32 id = 1;
  uint32 amount = 2;
}

message GetSupplierReply {
  string answer = 1;
}


//////////////////////
//// Catalog Service
//////////////////////

service Catalog {
  rpc GetCatalogInfo(GetCatalog) returns (CatalogReply) {}
  rpc NewCatalogArticle(NewCatalog) returns (CatalogReply) {}
  rpc UpdateCatalog(UpdatedData) returns(CatalogReply) {}
  rpc DeleteCatalog(GetCatalog) returns (CatalogReply) {}
}

message GetCatalog {
  uint32 id = 1;
}

message CatalogReply {
  uint32 id = 1;
  string name = 2;
  string description = 3;
  double price = 4;
}

message NewCatalog {
  string name = 1;
  string description = 2;
  double price = 3;
}

message UpdatedData {
  uint32 id = 1;
  string name = 2;
  string description = 3;
  double price = 4;
}


////////////////////////
//// Shipment Service
////////////////////////
// work in progress
service Shipment {
 rpc NewShipment(NewShipmentRequest) returns (ShipmentReply) {}
 rpc SendShipment(GetShipmentRequest) returns (ShipmentReply) {}
 rpc ReturnedShipment(GetShipmentRequest) returns (ShipmentReply) {}
}

message NewShipmentRequest {
  map<uint32, uint32> articles = 1;
  map<uint32, bool> ready = 2;
}

message ShipmentReply {
  uint32 id = 1;
  map<uint32, uint32> articles = 2;
  map<uint32, bool> ready = 3;
}

message GetShipmentRequest {
  uint32 id = 1;
  map<uint32, uint32> articles = 2;
  map<uint32, bool> ready = 3;
}
